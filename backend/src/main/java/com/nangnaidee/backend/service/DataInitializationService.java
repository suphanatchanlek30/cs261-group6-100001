// src/main/java/com/nangnaidee/backend/service/DataInitializationService.java

package com.nangnaidee.backend.service;

import com.nangnaidee.backend.model.Role;
import com.nangnaidee.backend.repo.RoleRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Service ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
 * - ‡∏™‡∏£‡πâ‡∏≤‡∏á Roles ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (ADMIN, HOST, USER)
 * - ‡πÑ‡∏°‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á Admin User ‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
 */
@Service
@RequiredArgsConstructor
@Slf4j
public class DataInitializationService implements CommandLineRunner {

    private final RoleRepository roleRepository;

    @Override
    @Transactional
    public void run(String... args) {
        log.info("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...");

        createRoles();

        log.info("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Roles ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô - ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
        log.info("üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: POST /api/auth/register");
        log.info("   - Role: USER, HOST, ‡∏´‡∏£‡∏∑‡∏≠ ADMIN");
    }

    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á Roles ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
     * ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö SQL: INSERT INTO dbo.roles(code, name) ... WHERE NOT EXISTS
     */
    private void createRoles() {
        log.info("üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Roles...");

        // ADMIN Role
        createRoleIfNotExists("ADMIN", "Administrator");

        // HOST Role
        createRoleIfNotExists("HOST", "Host");

        // USER Role
        createRoleIfNotExists("USER", "End User");

        log.info("üìã Roles ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ADMIN, HOST, USER");
    }

    /**
     * ‡∏™‡∏£‡πâ‡∏≤‡∏á Role ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô WHERE NOT EXISTS)
     */
    private void createRoleIfNotExists(String code, String name) {
        if (!roleRepository.existsByCode(code)) {
            Role role = new Role();
            role.setCode(code);
            role.setName(name);
            roleRepository.save(role);
            log.info("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á {} role ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", code);
        } else {
            log.info("‚ÑπÔ∏è {} role ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß", code);
        }
    }
}